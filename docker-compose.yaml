version: '3'
# docker compose logs -f api_membresias api_promociones api_clientes api_orquestador
services:
# ORQUESTADOR
  api_orquestador:
    build:
      context: ./api-orquestador
      dockerfile: Dockerfile
    container_name: api-orquestador-fastapi
    ports:
      - "5000:8000"
    volumes:
      - ./api-orquestador:/app
    depends_on:
      - api_clientes
      - api_membresias
      - api_promociones
    networks:
      - api-network
      

# MEMBRESIAS
  api_membresias:
    build:
      context: ./api-membresias
      dockerfile: Dockerfile
    container_name: api-membresias-golang
    ports:
      - "5002:8002"
    volumes:
      - ./api-membresias:/app
    environment:
      - DB_HOST=postgresql_database
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
    networks:
      - api-network


# PROMOCIONES
  api_promociones:
    build:
      context: ./api-promociones
      dockerfile: Dockerfile
    container_name: api-promociones-nodejs
    ports:
      - "5003:8003"
    volumes:
      - ./api-promociones:/app
      - /app/node_modules
    environment:
      - MONGO_URI=mongodb://mongo_database/promociones_db
    networks:
      - api-network


# CLIENTES
  api_clientes:
    build:
      context: ./api-clientes
      dockerfile: Dockerfile
    container_name: api-clientes-fastapi
    ports:
      - "5001:8001"
    volumes:
      - ./api-clientes:/app
    environment:
      - DB_USER=root
      - DB_PASSWORD=utec
      - DB_HOST=mysql_database
      - DB_PORT=3306
      - DB_NAME=mysql
    networks:
      - api-network

  # adminer_c:
  #   image: adminer
  #   container_name: adminer_c
  #   ports:
  #     - "8080:8080"

volumes:
  mysql_data:
  postgresql_data:
  mongodb_data:

networks:
  # promociones-network:
  #   driver: bridge
  # clientes-network:
  #   driver: bridge
  # membresias-network:
  #   driver: bridge
  api-network:
    driver: bridge